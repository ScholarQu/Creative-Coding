/*
galaxy by danni qu

references from p5.js website
https://p5js.org/examples/motion-morph.html
https://editor.p5js.org/hyershin/sketches/SkG_S5K3W
https://p5js.org/examples/objects-objects.html
*/

var fade;
var fadeAmount = 1;

var angle=10.0;
var offset=500;
var scalar=7.5;
var speed=0.1;
var col={
  r:255,
  g:0,
  b:0,
}

//let square1;

let circle=[];
let square=[];
let rect=[];

let morph=[];
let state=false;

// let img;
// function preload(){
//   img = loadImage ('http://127.0.0.1:8887/desktop/lettuce/lettuce.png');
// }

function setup() {
  createCanvas(600, 600);
  
  fade = 0;
 
  //square1 = new Jitter();
  
  background(0);
  
  for(let angle=20; angle<60; angle+=200){
    let v=p5.Vector.fromAngle(radians(angle-359));
    v.mult(150);
    //rotate (angle +150);
    circle.push(v);
    morph.push(createVector());
  }
  
  for(let x = -200 ; x < 200 ; x+=10){
    square.push(createVector(x,-200));
  }
  for (let y = -200; y < 200; y += 10) {
    square.push(createVector(200, y));
  }
  for (let x = 200; x > -200; x -= 10) {
    square.push(createVector(x, 200));
  }
  for (let y = 200; y > -200; y -= 10) {
    square.push(createVector(-200, y));
  }
  
} 

function draw() {
  //background(0);
  noStroke();
  fill(255, 250, 102, fade)
  ellipse(300,300,30,30);
  if (fade<1) fadeAmount=1; 
  if (fade>255) fadeAmount=-4; 
  fade += fadeAmount;
  
  let c=offset + sin(angle)*scalar;
  //let timer=30;
  //let canvas;
  
  /* jitter
  
    square1.move();
    square1.display();
    
  */
  /* a spiral of colorful ellipses
  
    translate(width / 4, height / 4);
    col.r=random(0,255);
    col.g=random(0,255);
    col.b=random(0,255);
    fill(col.r,col.g,col.b);
    var x=offset+cos(angle)*scalar;
    var y=offset+sin(angle)*scalar;
    noStroke();
    ellipse(x,y,15,15);
    
  */
  
  angle+=speed;
  scalar+=speed;
  
  let totalDistance=50;
  
  for(let i=0; i<circle.length;i++){
    let v1;
    if(state){
      v1=circle[i];
    } else {
      v1=square[i];
    }
    let v2=morph[i];
    v2.lerp(v1,0.1);
    totalDistance += p5.Vector.dist(v1,v2);
    }
  
  if (totalDistance < 100) {
    state = !state;
  }

  translate(width / 2, height / 2);
  rotate(c);
  beginShape();
  strokeWeight(1);
  col.r=random(0,255);
  col.g=random(0,255);
  col.b=random(0,255);
  stroke(col.r,col.g,col.b);
  
  morph.forEach(v => {
    vertex(v.x, v.y);
  });
  endShape(CLOSE);
  
  
/* bouncing objects
  
  if(x > width-25){
    xspeed = xspeed*(-1);
    x = width-25;
  }
  if(x < width-575){
    xspeed = xspeed *(-1);
    x = width-525;
  }
  if(y > height-25){
    yspeed = yspeed *(-1);
    y=height-25;
  }
  if(y <height-575){
    yspeed = yspeed *(-1);
    y=height-575;
  }

*/
  
}

/* Jitter stuff

  class Jitter{
    constructor(){
      this.x = random(width);
      this.y = random(height);
      this.diameter = random(10,30);
      this.speed = 1;
    }

    move(){
      this.x += random(-this.speed, this.speed);
      this.y += random(-this.speed, this.speed);
    }

    display(){
      noFill();
      strokeWeight(1);
      col.r=random(0,255);
      col.g=random(0,255);
      col.b=random(0,255);
      stroke(col.r,col.g,col.b);

      ellipse(this.x, this.y, this.diameter, this.diameter);
    }

  }

*/
